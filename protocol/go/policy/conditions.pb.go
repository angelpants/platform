// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: policy/conditions.proto

package policy

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// buflint ENUM_VALUE_PREFIX: to make sure that C++ scoping rules aren't violated when users add new enum values to an enum in a given package
type ConditionalOperatorEnum int32

const (
	ConditionalOperatorEnum_CONDITIONAL_OPERATOR_ENUM_UNSPECIFIED ConditionalOperatorEnum = 0
	// operator that returns true if a value in a list matches the string
	ConditionalOperatorEnum_CONDITIONAL_OPERATOR_ENUM_IN ConditionalOperatorEnum = 1
	// operator that returns true if a value is not in a list that is matched by string
	ConditionalOperatorEnum_CONDITIONAL_OPERATOR_ENUM_NOT_IN ConditionalOperatorEnum = 2
	// operator that returns true if a value in a list contains the substring
	ConditionalOperatorEnum_CONDITIONAL_OPERATOR_ENUM_IN_CONTAINS ConditionalOperatorEnum = 3
)

// Enum value maps for ConditionalOperatorEnum.
var (
	ConditionalOperatorEnum_name = map[int32]string{
		0: "CONDITIONAL_OPERATOR_ENUM_UNSPECIFIED",
		1: "CONDITIONAL_OPERATOR_ENUM_IN",
		2: "CONDITIONAL_OPERATOR_ENUM_NOT_IN",
		3: "CONDITIONAL_OPERATOR_ENUM_IN_CONTAINS",
	}
	ConditionalOperatorEnum_value = map[string]int32{
		"CONDITIONAL_OPERATOR_ENUM_UNSPECIFIED": 0,
		"CONDITIONAL_OPERATOR_ENUM_IN":          1,
		"CONDITIONAL_OPERATOR_ENUM_NOT_IN":      2,
		"CONDITIONAL_OPERATOR_ENUM_IN_CONTAINS": 3,
	}
)

func (x ConditionalOperatorEnum) Enum() *ConditionalOperatorEnum {
	p := new(ConditionalOperatorEnum)
	*p = x
	return p
}

func (x ConditionalOperatorEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConditionalOperatorEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_policy_conditions_proto_enumTypes[0].Descriptor()
}

func (ConditionalOperatorEnum) Type() protoreflect.EnumType {
	return &file_policy_conditions_proto_enumTypes[0]
}

func (x ConditionalOperatorEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConditionalOperatorEnum.Descriptor instead.
func (ConditionalOperatorEnum) EnumDescriptor() ([]byte, []int) {
	return file_policy_conditions_proto_rawDescGZIP(), []int{0}
}

type SingleCondition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// a selector for a field value on a flattened Entity Representation (such as from idP/LDAP)
	ExternalSelectorValue string `protobuf:"bytes,1,opt,name=external_selector_value,json=externalSelectorValue,proto3" json:"external_selector_value,omitempty"`
	// the evaluation operator of relation
	Operator ConditionalOperatorEnum `protobuf:"varint,2,opt,name=operator,proto3,enum=policy.ConditionalOperatorEnum" json:"operator,omitempty"`
	// list of comparison values for the result of applying the external_selector_value on a flattened Entity Representation, evaluated by the operator
	ExternalValues []string `protobuf:"bytes,3,rep,name=external_values,json=externalValues,proto3" json:"external_values,omitempty"`
}

func (x *SingleCondition) Reset() {
	*x = SingleCondition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_conditions_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SingleCondition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SingleCondition) ProtoMessage() {}

func (x *SingleCondition) ProtoReflect() protoreflect.Message {
	mi := &file_policy_conditions_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SingleCondition.ProtoReflect.Descriptor instead.
func (*SingleCondition) Descriptor() ([]byte, []int) {
	return file_policy_conditions_proto_rawDescGZIP(), []int{0}
}

func (x *SingleCondition) GetExternalSelectorValue() string {
	if x != nil {
		return x.ExternalSelectorValue
	}
	return ""
}

func (x *SingleCondition) GetOperator() ConditionalOperatorEnum {
	if x != nil {
		return x.Operator
	}
	return ConditionalOperatorEnum_CONDITIONAL_OPERATOR_ENUM_UNSPECIFIED
}

func (x *SingleCondition) GetExternalValues() []string {
	if x != nil {
		return x.ExternalValues
	}
	return nil
}

// either a nested ConditionSet or Conditions
type Conditional struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Conditional:
	//
	//	*Conditional_Condition
	//	*Conditional_ConditionSet
	Conditional isConditional_Conditional `protobuf_oneof:"conditional"`
}

func (x *Conditional) Reset() {
	*x = Conditional{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_conditions_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Conditional) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conditional) ProtoMessage() {}

func (x *Conditional) ProtoReflect() protoreflect.Message {
	mi := &file_policy_conditions_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conditional.ProtoReflect.Descriptor instead.
func (*Conditional) Descriptor() ([]byte, []int) {
	return file_policy_conditions_proto_rawDescGZIP(), []int{1}
}

func (m *Conditional) GetConditional() isConditional_Conditional {
	if m != nil {
		return m.Conditional
	}
	return nil
}

func (x *Conditional) GetCondition() *SingleCondition {
	if x, ok := x.GetConditional().(*Conditional_Condition); ok {
		return x.Condition
	}
	return nil
}

func (x *Conditional) GetConditionSet() *ConditionSet {
	if x, ok := x.GetConditional().(*Conditional_ConditionSet); ok {
		return x.ConditionSet
	}
	return nil
}

type isConditional_Conditional interface {
	isConditional_Conditional()
}

type Conditional_Condition struct {
	Condition *SingleCondition `protobuf:"bytes,1,opt,name=condition,proto3,oneof"`
}

type Conditional_ConditionSet struct {
	ConditionSet *ConditionSet `protobuf:"bytes,2,opt,name=condition_set,json=conditionSet,proto3,oneof"`
}

func (*Conditional_Condition) isConditional_Conditional() {}

func (*Conditional_ConditionSet) isConditional_Conditional() {}

type ConditionSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Conditions []*Conditional `protobuf:"bytes,1,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// the boolean evaluation type across the conditions
	BooleanOperator ConditionBooleanTypeEnum `protobuf:"varint,2,opt,name=boolean_operator,json=booleanOperator,proto3,enum=policy.ConditionBooleanTypeEnum" json:"boolean_operator,omitempty"`
}

func (x *ConditionSet) Reset() {
	*x = ConditionSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_policy_conditions_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConditionSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConditionSet) ProtoMessage() {}

func (x *ConditionSet) ProtoReflect() protoreflect.Message {
	mi := &file_policy_conditions_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConditionSet.ProtoReflect.Descriptor instead.
func (*ConditionSet) Descriptor() ([]byte, []int) {
	return file_policy_conditions_proto_rawDescGZIP(), []int{2}
}

func (x *ConditionSet) GetConditions() []*Conditional {
	if x != nil {
		return x.Conditions
	}
	return nil
}

func (x *ConditionSet) GetBooleanOperator() ConditionBooleanTypeEnum {
	if x != nil {
		return x.BooleanOperator
	}
	return ConditionBooleanTypeEnum_CONDITION_BOOLEAN_TYPE_ENUM_UNSPECIFIED
}

var File_policy_conditions_proto protoreflect.FileDescriptor

var file_policy_conditions_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x48, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x45,
	0x6e, 0x75, 0x6d, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x82, 0x01, 0x02, 0x10, 0x01,
	0x52, 0x08, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x22, 0x92, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x12, 0x37, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e,
	0x53, 0x69, 0x6e, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x09, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0d,
	0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x9d, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x74, 0x12, 0x33, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x58,
	0x0a, 0x10, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x6f, 0x6f, 0x6c, 0x65,
	0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8,
	0x01, 0x01, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x62, 0x6f, 0x6f, 0x6c, 0x65, 0x61, 0x6e,
	0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2a, 0xb7, 0x01, 0x0a, 0x17, 0x43, 0x6f, 0x6e,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x45, 0x6e, 0x75, 0x6d, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f,
	0x4e, 0x41, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x55,
	0x4d, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12,
	0x20, 0x0a, 0x1c, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x4f,
	0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x49, 0x4e, 0x10,
	0x01, 0x12, 0x24, 0x0a, 0x20, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c,
	0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f, 0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x29, 0x0a, 0x25, 0x43, 0x4f, 0x4e, 0x44, 0x49,
	0x54, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x4f, 0x50, 0x45, 0x52, 0x41, 0x54, 0x4f, 0x52, 0x5f,
	0x45, 0x4e, 0x55, 0x4d, 0x5f, 0x49, 0x4e, 0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x53,
	0x10, 0x03, 0x42, 0x85, 0x01, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x6f, 0x6c, 0x69, 0x63,
	0x79, 0x42, 0x0f, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x50, 0x72, 0x6f,
	0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x6f, 0x70, 0x65, 0x6e, 0x74, 0x64, 0x66, 0x2f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x6f,
	0x6c, 0x69, 0x63, 0x79, 0xa2, 0x02, 0x03, 0x50, 0x58, 0x58, 0xaa, 0x02, 0x06, 0x50, 0x6f, 0x6c,
	0x69, 0x63, 0x79, 0xca, 0x02, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0xe2, 0x02, 0x12, 0x50,
	0x6f, 0x6c, 0x69, 0x63, 0x79, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0xea, 0x02, 0x06, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_policy_conditions_proto_rawDescOnce sync.Once
	file_policy_conditions_proto_rawDescData = file_policy_conditions_proto_rawDesc
)

func file_policy_conditions_proto_rawDescGZIP() []byte {
	file_policy_conditions_proto_rawDescOnce.Do(func() {
		file_policy_conditions_proto_rawDescData = protoimpl.X.CompressGZIP(file_policy_conditions_proto_rawDescData)
	})
	return file_policy_conditions_proto_rawDescData
}

var file_policy_conditions_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_policy_conditions_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_policy_conditions_proto_goTypes = []interface{}{
	(ConditionalOperatorEnum)(0),  // 0: policy.ConditionalOperatorEnum
	(*SingleCondition)(nil),       // 1: policy.SingleCondition
	(*Conditional)(nil),           // 2: policy.Conditional
	(*ConditionSet)(nil),          // 3: policy.ConditionSet
	(ConditionBooleanTypeEnum)(0), // 4: policy.ConditionBooleanTypeEnum
}
var file_policy_conditions_proto_depIdxs = []int32{
	0, // 0: policy.SingleCondition.operator:type_name -> policy.ConditionalOperatorEnum
	1, // 1: policy.Conditional.condition:type_name -> policy.SingleCondition
	3, // 2: policy.Conditional.condition_set:type_name -> policy.ConditionSet
	2, // 3: policy.ConditionSet.conditions:type_name -> policy.Conditional
	4, // 4: policy.ConditionSet.boolean_operator:type_name -> policy.ConditionBooleanTypeEnum
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_policy_conditions_proto_init() }
func file_policy_conditions_proto_init() {
	if File_policy_conditions_proto != nil {
		return
	}
	file_policy_objects_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_policy_conditions_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SingleCondition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_conditions_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Conditional); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_policy_conditions_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConditionSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_policy_conditions_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Conditional_Condition)(nil),
		(*Conditional_ConditionSet)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_policy_conditions_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_policy_conditions_proto_goTypes,
		DependencyIndexes: file_policy_conditions_proto_depIdxs,
		EnumInfos:         file_policy_conditions_proto_enumTypes,
		MessageInfos:      file_policy_conditions_proto_msgTypes,
	}.Build()
	File_policy_conditions_proto = out.File
	file_policy_conditions_proto_rawDesc = nil
	file_policy_conditions_proto_goTypes = nil
	file_policy_conditions_proto_depIdxs = nil
}
